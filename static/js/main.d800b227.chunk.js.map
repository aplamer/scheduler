{"version":3,"sources":["components/TimeInput/Date/Date.js","components/TimeInput/Inputs/Input/Input.js","components/TimeInput/Inputs/Inputs.js","components/TimeInput/PrevInputs/PrevInputs.js","containers/TimeInputContainer/TimeInputContainer.js","components/Score/Score.js","hoc/Auxiliary/Auxiliary.js","containers/Home/Home.js","containers/History/History.js","containers/About/About.js","containers/Settings/Settings.js","assets/logo.png","components/UI/Backdrop/Backdrop.js","containers/Login/Login.js","containers/Header/Header.js","components/Time/Time.js","containers/CurrentTime/CurrentTime.js","containers/App.js","reportWebVitals.js","store/reducer.js","index.js","containers/Header/Header.module.css","containers/Login/Login.module.css","components/Time/Time.module.css","components/Score/Score.module.css","containers/Settings/Settings.module.css","components/TimeInput/Inputs/Inputs.module.css","components/UI/Backdrop/Backdrop.module.css"],"names":["Date","Input","state","button","colonChecker","toggleButtonHandler","props","buttonHandler","value","checkValidInputAuto","event","target","length","test","undefined","time","nativeEvent","inputType","inputHandler","slice","setState","InputGroup","size","FormControl","this","onChange","placeholder","aria-label","aria-describedby","Button","disabled","settings","onClick","Component","Inputs","sleepTime","wakeTime","button1","button2","invalidInput","inputChangeHandler","newTime","buttonChangeHandler","newAMorPM","convertTimeToNum","hours","parseInt","minute","checkValidInput","sleepTimeValue","wakeTimeValue","timeSettings","onAddTime","invalidMessage","style","color","fontWeight","Container","Row","Col","className","classes","variant","connect","times","Times","score","sleepScore","dispatch","savedTime","type","id","toString","PrevInputs","prevTimes","TimeInputContainer","Score","scoreText","scoreImg","aux","children","Home","History","timesReturn","textAlign","map","timeElement","totalHours","About","Settings","dateType","dropdownOption","onChangeSettings","timeType","dateSettings","data","changing","timeOrDate","Backdrop","show","close","Login","validEmail","validPassword","email","password","signingUp","toggleSignup","preventDefault","prevState","checkValid","toLowerCase","signupHelper","response","newState","token","idToken","userId","localId","error","axios","post","then","expirationDate","getTime","expiresIn","localStorage","setItem","queryParams","get","res","patch","Object","keys","dataId","authSignUp","loginHelper","authLogin","auth","authData","returnSecureToken","urlString","modalClose","catch","err","authFail","Link","errorMessage","message","Modal","float","borderColor","newToken","Header","loggingIn","loginToggler","logoutHelper","logOut","history","push","modal","authButton","signIn","Navbar","src","icon","alt","navImage","Nav","to","navLink","Form","inline","Time","timeDisplay","day","date","TimeOptions","updateClock","toLocaleDateString","split","month","year","toLocaleTimeString","hour","second","d","getDay","totalhour","getHours","dayHandler","AMorPM","Month","Year","Hour","TotalHour","Minute","Second","Day","AMPM","dayNum","interval","setInterval","clearInterval","fullTime","fullDate","App","componentDidMount","getItem","autoLogin","setTimeout","path","component","CurrentTime","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","leadingZeroHandler","splittingTime","militaryToRegularHandler","tempTimeValue","regularToMilitaryHandler","timeToNumberHelper","retTime","stdScorer","std","average","scores","totalScore","i","totalHoursHelper","totalSleepHours","sleepHoursTotalAvg","newTimes","tempNewTimes","tempSleepTimeValue","tempWakeTimeValue","sleepHoursConsistentAvg","sleepTimes","wakeTimes","sleepTimeAvg","sleepHours","synchState","put","sleepAMorPM","wakeAMorPM","totalHoursValue","toFixed","removeItem","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d800b227.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Date = () => {\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Date;","import React, {Component} from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport {Button} from 'react-bootstrap'\r\n\r\nclass Input extends Component {\r\n    state = {\r\n        button: \"AM\",\r\n        colonChecker: false\r\n    }\r\n\r\n    toggleButtonHandler = () => {\r\n        if(this.props.button === \"AM\"){\r\n            this.props.buttonHandler(\"PM\", this.props.value)\r\n        }\r\n        else{\r\n            this.props.buttonHandler(\"AM\", this.props.value)\r\n        }\r\n    }\r\n\r\n    checkValidInputAuto = (event) => {\r\n        if(event.target.value.length <= 5 \r\n            && (/^[0-9\\b]+$/.test(event.target.value) \r\n            || event.target.value === \"\" \r\n            || ((event.target.value[2] === \":\" && this.state.colonChecker) && (/^[0-9\\b]+$/.test(event.target.value[4]) || event.target.value[4] === undefined)))){\r\n                if(this.props.time.length === 2 && \r\n                    event.nativeEvent.inputType === \"insertText\"){\r\n                    this.props.inputHandler(event.target.value.slice(0,2) + \":\" + event.target.value[2], this.props.value);\r\n                    this.setState({colonChecker: true})\r\n                }\r\n                else if(this.props.time.length === 4 && \r\n                    event.nativeEvent.inputType === \"deleteContentBackward\"){\r\n                    this.props.inputHandler(event.target.value.slice(0,2), this.props.value)\r\n                    this.setState({colonChecker: false})\r\n                }\r\n                else{\r\n                    this.props.inputHandler(event.target.value, this.props.value)\r\n                }\r\n        }\r\n        \r\n    }\r\n    render() { \r\n        return (\r\n            <InputGroup size = \"lg\">\r\n                <FormControl value = {this.props.time} onChange = {event => this.checkValidInputAuto(event)} placeholder = \"12:00\" aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                <Button disabled = {this.props.settings === \"Military\"} onClick = {this.toggleButtonHandler}>{this.props.button}</Button>\r\n            </InputGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input","import React, {Component} from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport {Button} from 'react-bootstrap'\r\nimport classes from './Inputs.module.css'\r\nimport {connect} from 'react-redux'\r\nimport Input from './Input/Input'\r\nclass Inputs extends Component {\r\n    state = {\r\n        sleepTime: \"\",\r\n        wakeTime: \"\",\r\n        button1: \"AM\",\r\n        button2: \"AM\",\r\n        invalidInput: false\r\n    }\r\n    inputChangeHandler = (newTime, value) => {\r\n        if(value === \"sleep\"){\r\n            this.setState({sleepTime: newTime})\r\n        }\r\n        else if(value === \"wake\"){\r\n            this.setState({wakeTime: newTime})\r\n        }\r\n    }\r\n\r\n    buttonChangeHandler = (newAMorPM, value) => {\r\n        if(value === \"sleep\"){\r\n            this.setState({button1: newAMorPM})\r\n        }\r\n        else if(value === \"wake\"){\r\n            this.setState({button2: newAMorPM})\r\n        }\r\n    }\r\n\r\n    convertTimeToNum = (time) => {\r\n        return {\r\n            hours: parseInt(time.slice(0,2)),\r\n            minute: parseInt(time.slice(3,5))\r\n        }\r\n    }\r\n\r\n    checkValidInput = () => {\r\n        if(this.state.sleepTime === \"\" || this.state.wakeTime.length === \"\"){\r\n            this.setState({invalidInput: true})\r\n            return \r\n        }\r\n        else if(this.state.sleepTime.length !== 5 || this.state.wakeTime.length !== 5){\r\n            this.setState({invalidInput: true})\r\n            return\r\n        }\r\n        let sleepTimeValue = this.convertTimeToNum(this.state.sleepTime)\r\n        let wakeTimeValue = this.convertTimeToNum(this.state.wakeTime)\r\n        if(sleepTimeValue.minute >= 60 ||  wakeTimeValue.minute >= 60){\r\n            this.setState({invalidInput: true})\r\n            return\r\n        }\r\n        else if(this.props.timeSettings === \"Military\" && \r\n        (sleepTimeValue.hours >= 24 ||  wakeTimeValue.hours >= 24)){\r\n            this.setState({invalidInput: true})\r\n            return\r\n        }\r\n        else if(this.props.timeSettings === \"Regular\" && \r\n        ((sleepTimeValue.hours === 0 || sleepTimeValue.hours > 12) || \r\n        (wakeTimeValue.hours === 0 || wakeTimeValue.hours > 12))){\r\n            this.setState({invalidInput: true})\r\n            return\r\n        }\r\n        else{ \r\n            this.setState({invalidInput: false})\r\n            this.props.onAddTime(this.state);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let invalidMessage = null;\r\n        if(this.state.invalidInput === true){\r\n            invalidMessage = <p style = {{color: 'red', fontWeight: 'bold'}}>Invalid Input: Please follow military or regular time depending on your settings.</p>\r\n        }\r\n        return(\r\n            <Container>\r\n                <h2>Today's Times:</h2>\r\n                {invalidMessage}\r\n                {this.state.invalidInput ? null : <br></br>}\r\n                <Row>\r\n                    <Col>\r\n                        Sleep Time\r\n                        <Input \r\n                        inputHandler = {this.inputChangeHandler}\r\n                        buttonHandler = {this.buttonChangeHandler}\r\n                        value = \"sleep\" \r\n                        time = {this.state.sleepTime} \r\n                        settings = {this.props.timeSettings}\r\n                        button = {this.state.button1}/>\r\n                        \r\n                    </Col>\r\n    \r\n                    <Col>\r\n                        Wakeup Time\r\n                        <Input \r\n                        inputHandler = {this.inputChangeHandler}\r\n                        buttonHandler = {this.buttonChangeHandler}\r\n                        value = \"wake\" \r\n                        time = {this.state.wakeTime} \r\n                        settings = {this.props.timeSettings}\r\n                        button = {this.state.button2}/>\r\n                    </Col>\r\n                </Row>\r\n                <br></br>\r\n                \r\n                <br></br>\r\n                <Button  onClick = {this.checkValidInput} className = {classes.Button}size = \"lg\" variant = \"success\">Save Times</Button>\r\n                <br></br>\r\n                \r\n                <br></br>\r\n                <hr></hr>\r\n    \r\n            </Container>\r\n           \r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        times: state.Times,\r\n        score: state.sleepScore,\r\n        timeSettings: state.timeSettings\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddTime: (savedTime) => dispatch({type: \"ADD\", id: new Date().toString(), value: savedTime}),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs);","import React from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport {connect} from 'react-redux'\r\nimport { Component } from 'react';\r\nclass PrevInputs extends Component {\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <h2>Yesterday's Times</h2>\r\n                <br></br>\r\n                <Row>\r\n                    <Col>\r\n                        Sleep Time\r\n                        <InputGroup size = \"lg\">\r\n                            <FormControl  disabled = {true} placeholder = {this.props.prevTimes[1].sleepTime} aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                        </InputGroup>\r\n                        \r\n                    </Col>\r\n    \r\n                    <Col>\r\n                        Wakeup Time\r\n                        <InputGroup size = \"lg\">\r\n                            <FormControl  disabled = {true} placeholder = {this.props.prevTimes[1].wakeTime} aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        prevTimes: state.Times\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(PrevInputs);","import React from 'react'\r\nimport Date from '../../components/TimeInput/Date/Date'\r\nimport Inputs from '../../components/TimeInput/Inputs/Inputs'\r\nimport PrevInputs from '../../components/TimeInput/PrevInputs/PrevInputs'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst TimeInputContainer = () =>{\r\n    return(\r\n        <Container>\r\n            <Date>\r\n\r\n            </Date>\r\n\r\n            <Inputs>\r\n            </Inputs>\r\n            \r\n            <br></br>\r\n            \r\n            <PrevInputs>\r\n\r\n            </PrevInputs>\r\n            \r\n        </Container>\r\n    )\r\n}\r\nexport default TimeInputContainer;","import React, {Component} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport classes from './Score.module.css'\r\nimport {connect} from 'react-redux'\r\nclass Score extends Component {\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <Col className = {classes.scoreText}>Sleep Score</Col>\r\n                <Col className = {classes.scoreImg}>{this.props.score}</Col>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        score: state.sleepScore\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Score);\r\n","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react'\r\nimport TimeInputContainer from '../TimeInputContainer/TimeInputContainer'\r\nimport Score from '../../components/Score/Score'\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nconst Home = () => {\r\n    return(\r\n        <Aux>\r\n            <TimeInputContainer></TimeInputContainer>\r\n            <hr></hr>\r\n            <Score></Score>\r\n        </Aux>\r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Component } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nclass History extends Component {\r\n\r\n    render(){\r\n        let timesReturn = null\r\n        if(this.props.times[0].id === \"-1\"){\r\n            timesReturn = <h1 style = {{textAlign: \"center\", color: \"grey\"}}>No sleep times recorded.</h1>\r\n        }\r\n        else{\r\n            timesReturn = this.props.times.map(timeElement =>\r\n                {\r\n                    if(timeElement.id === \"-1\"){\r\n                        return null\r\n                    }\r\n                    else{\r\n                        return(\r\n                            <Aux key = {timeElement.id}>\r\n                                \r\n                                <Row>\r\n                                    <Col>\r\n                                    <div style = {{color: \"#007bff\"}}>\r\n                                        Date Entered:\r\n                                    </div>\r\n                                    {timeElement.id}\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                    <div style = {{color: \"#007bff\"}}>\r\n                                        Sleep Time:\r\n                                    </div>\r\n                                    {timeElement.sleepTime}\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                    <div style = {{color: \"#007bff\"}}>\r\n                                        Wake Time:\r\n                                    </div>\r\n                                    {timeElement.wakeTime}\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                    <div style = {{color: \"#007bff\"}}>\r\n                                        Total Hours:\r\n                                    </div>\r\n                                    {timeElement.totalHours}\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr></hr>\r\n                            </Aux>\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        return(\r\n            <Container>\r\n                {timesReturn}\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        times: state.Times\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(History)","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nconst About = () => {\r\n    return(\r\n        <Container>\r\n            <div>\r\n                <p>\r\n                Hi, if you're reading this right now that must mean you're on the Sleep Scheduler website!\r\n                The Sleep Schduler website is a (currently in progress) website which will allow you to record\r\n                sleep and wake up times, check up on your sleep history for the past week, see your total sleep hours and more!\r\n                Sleep Scheduler will also give you a score based on how consistent your sleep schedule has been and will rate\r\n                certain aspect of your sleep habits such as consistency in time and total sleep hours.\r\n                </p>\r\n\r\n                <p>\r\n                Use the sleep schedule website whenever you wake up to record an approxiamation of when you slept and woke up.\r\n                Make sure to record your sleep and wake times as accurately as possible to help better adjust it and make it \r\n                more consistent, this website is only really useful if you're honest with your sleeping habits.\r\n                </p>\r\n               \r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport classes from './Settings.module.css'\r\nclass Settings extends Component {\r\n    render(){\r\n        \r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    Date Format:\r\n                    <select value = {this.props.dateType} className = {classes.dropdownOption} onChange = {(event) => this.props.onChangeSettings(event, \"Date\")}>\r\n                        <option value=\"MDY\">MDY</option>\r\n                        <option value=\"DMY\">DMY</option>\r\n                        <option value=\"YMD\">YMD</option>\r\n                    </select>\r\n                </Row>\r\n                <br></br>\r\n                <br></br>\r\n                <Row>\r\n                    Time Setting:\r\n                    <select value = {this.props.timeType} className = {classes.dropdownOption}  onChange = {(event) => this.props.onChangeSettings(event, \"Time\")}>\r\n                        <option value=\"Regular\">Regular</option>\r\n                        <option value=\"Military\">Military</option>\r\n                    </select>\r\n                </Row>\r\n\r\n            </Container>\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        timeType: state.timeSettings,\r\n        dateType: state.dateSettings\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onChangeSettings: (data, changing) => dispatch({type: \"CHANGE_SETTINGS\", value: data.target.value, timeOrDate: changing}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)","export default __webpack_public_path__ + \"static/media/logo.5a08796d.png\";","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\nconst Backdrop = props => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.close}></div> : null\r\n    )\r\n}\r\n\r\nexport default Backdrop","import React from 'react'\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport classes from './Login.module.css'\r\nimport { Component } from 'react'\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nclass Login extends Component {\r\n    state = {\r\n        validEmail: false,\r\n        validPassword: false,\r\n        email: \"\",\r\n        password: \"\",\r\n        signingUp: false\r\n    }\r\n\r\n    toggleSignup = event => {\r\n        event.preventDefault()\r\n        this.setState(prevState => {\r\n            return {signingUp: !prevState.signingUp}\r\n        })\r\n    }\r\n    checkValid = (event, type) => {\r\n        if(event.target.value.length <= 6 || event.target.value.length >= 30){\r\n            if(type === \"Email\"){\r\n                this.setState({validEmail: false})\r\n            }\r\n            if(type === \"Password\"){\r\n                this.setState({validPassword: false})\r\n            }\r\n        }\r\n        else if(type === \"Email\" && \r\n        !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(event.target.value.toLowerCase())){\r\n            this.setState({validEmail: false})\r\n        }\r\n        else if( type === \"Password\" && \r\n        (!/^[A-Za-z0-9 ]+$/.test(event.target.value) || /\\s/g.test(event.target.value))){\r\n            this.setState({validPassword: false})\r\n        }\r\n        else {\r\n            if(type === \"Email\"){\r\n                this.setState({email: event.target.value, validEmail: true})\r\n            }\r\n            if(type === \"Password\"){\r\n                this.setState({password: event.target.value, validPassword: true})\r\n            }\r\n        }\r\n    }\r\n\r\n    signupHelper = (response) => {\r\n        const newState = {\r\n            ...this.props.state,\r\n            token: response.data.idToken,\r\n            userId: response.data.localId,\r\n            error: null\r\n        }\r\n        axios.post('https://sleep-scheduler-4c01c-default-rtdb.firebaseio.com/data.json?auth=' + response.data.idToken, newState)\r\n        .then( () =>{\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n            localStorage.setItem(\"token\", response.data.idToken);\r\n            localStorage.setItem(\"expirationDate\", expirationDate);\r\n            localStorage.setItem(\"userId\", response.data.localId);\r\n\r\n            const queryParams = \"?auth=\" + response.data.idToken + '&orderBy=\"userId\"&equalTo=\"' + response.data.localId + '\"';\r\n            axios.get('https://sleep-scheduler-4c01c-default-rtdb.firebaseio.com/data.json' + queryParams)\r\n            .then(res => {\r\n                axios.patch('https://sleep-scheduler-4c01c-default-rtdb.firebaseio.com/data/' + Object.keys(res.data)[0].toString() + '.json?auth=' + response.data.idToken, {...newState, dataId: Object.keys(res.data)[0].toString()})\r\n                this.props.authSignUp({...newState, dataId: Object.keys(res.data)[0].toString()})\r\n            })\r\n        }\r\n        );\r\n\r\n        \r\n    }\r\n\r\n    loginHelper = (response) => {\r\n        const queryParams = \"?auth=\" + response.data.idToken + '&orderBy=\"userId\"&equalTo=\"' + response.data.localId + '\"';\r\n        axios.get('https://sleep-scheduler-4c01c-default-rtdb.firebaseio.com/data.json' + queryParams)\r\n        .then(res => {\r\n            \r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n            localStorage.setItem(\"token\", response.data.idToken);\r\n            localStorage.setItem(\"expirationDate\", expirationDate);\r\n            localStorage.setItem(\"userId\", response.data.localId);\r\n            this.props.authLogin(res, response.data.idToken)\r\n        })\r\n    }\r\n\r\n    auth = (event) => {\r\n        event.preventDefault()\r\n        const authData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            returnSecureToken: true\r\n        }\r\n        let urlString = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCeXzqMKfL2wtLddwTGxR2xjBpXjfRXfc0\"\r\n        if(this.state.signingUp){\r\n            urlString = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCeXzqMKfL2wtLddwTGxR2xjBpXjfRXfc0\"\r\n        }\r\n        axios.post(urlString, authData)\r\n        .then(response => {\r\n            if(this.state.signingUp){\r\n                this.signupHelper(response);\r\n            }\r\n            else{\r\n                this.loginHelper(response);\r\n            }\r\n            this.props.modalClose();\r\n        })\r\n        .catch(err => {\r\n            this.props.authFail(err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let button = null\r\n        if(this.state.signingUp){\r\n            button = \r\n            <Aux>\r\n                <Button \r\n                    onClick = {(event) => this.auth(event)} \r\n                    className = {classes.Button} \r\n                    disabled = {!this.state.validPassword || !this.state.validEmail}>\r\n                        Sign Up  \r\n                </Button>\r\n                <br></br>\r\n                <Button \r\n                className = {classes.Link}\r\n                onClick = {(event) => this.toggleSignup(event)}>\r\n                    Already have an account? Log In here!\r\n                </Button>\r\n            </Aux>\r\n        }\r\n        else{\r\n            button = \r\n            <Aux>\r\n                <Button \r\n                    onClick = {(event) => this.auth(event)} \r\n                    className = {classes.Button} \r\n                    disabled = {!this.state.validPassword || !this.state.validEmail}>\r\n                        Log In \r\n                </Button>\r\n                <br></br>\r\n                <Button\r\n                className = {classes.Link}\r\n                onClick = {(event) => this.toggleSignup(event)}>\r\n                    Don't have an account yet? Sign Up here!\r\n                </Button>\r\n            </Aux>\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if(this.props.error){\r\n            errorMessage = <p>{this.props.error.message}</p>\r\n        }\r\n        return (\r\n            <Aux>\r\n                <div className = {classes.Modal}>\r\n                        {errorMessage}\r\n                        <div style = {{float: \"left\"}}>Email:</div>\r\n                        <InputGroup size = \"lg\">\r\n                            <FormControl  \r\n                            style = {{\r\n                                borderColor: this.state.validEmail ?  null : \"red\"\r\n                            }}\r\n                            placeholder = \"Email\" aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" \r\n                            onChange = {(event) => this.checkValid(event, 'Email')}/>\r\n                        </InputGroup>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <div style = {{float: \"left\"}}>Password:</div>\r\n                        <InputGroup size = \"lg\">\r\n                            <FormControl \r\n                            style = {{\r\n                                borderColor: this.state.validPassword ?  null : \"red\"\r\n                            }} \r\n                            placeholder = \"Password\" aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" \r\n                            onChange = {(event) => this.checkValid(event, 'Password')}/>\r\n                        </InputGroup>\r\n                        <br></br>\r\n                        <br></br>\r\n                        {button}\r\n                </div>\r\n\r\n                <Backdrop show = {this.props.show} close = {this.props.modalClose}/>\r\n            </Aux>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.error,\r\n        state: state\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authFail: (error) => dispatch({type: \"AUTH_FAIL\", error: error}),\r\n        authSignUp: (response) => dispatch({type: \"AUTH_SIGNUP\", response: response}),\r\n        authLogin: (response, newToken) => dispatch({type: \"AUTH_LOGIN\", response: response, token: newToken})\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport classes from './Header.module.css'\r\nimport icon from '../../assets/logo.png'\r\nimport Login from '../Login/Login'\r\nimport { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nclass Header extends Component {\r\n    state = {\r\n        loggingIn: false\r\n    }\r\n\r\n       \r\n    loginToggler = () => {\r\n        this.setState({loggingIn: false})\r\n    }\r\n    \r\n    logoutHelper = () => {\r\n        this.props.logOut();\r\n        this.props.history.push('/scheduler/')\r\n        \r\n    }\r\n    render(){\r\n\r\n        let modal = this.state.loggingIn ? <Login show = {this.state.loggingIn} modalClose = {this.loginToggler}/> : null\r\n        let authButton = null\r\n        if(this.props.token){\r\n            authButton = <Button variant=\"outline-primary\" className = {classes.signIn} onClick = {this.logoutHelper}>Log out</Button>\r\n        }\r\n        else{\r\n            authButton = <Button variant=\"outline-primary\" className = {classes.signIn} onClick = {() => this.setState({loggingIn: true})}>Log In</Button>\r\n        }\r\n        return(\r\n            <div>\r\n                <Navbar className = {classes.Header} variant=\"light\">\r\n                    <img src = {icon} alt = \"Null\" className = {classes.navImage}></img>\r\n                    <Nav variant = \"pills\" className=\"mr-auto\">\r\n                        <Link to=\"/scheduler/\" className = {classes.navLink}>Home</Link>\r\n                        <Link to=\"/history\" className = {classes.navLink}>History</Link>\r\n                        <Link to=\"/about\" className = {classes.navLink}>About</Link>\r\n                        <Link to=\"/settings\" className = {classes.navLink}>Settings</Link>\r\n                    </Nav>\r\n                    <Form inline>\r\n                    {authButton}\r\n                    </Form>\r\n                </Navbar>\r\n                {modal}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logOut: () => dispatch({type: \"LOGOUT\"})\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport classes from './Time.module.css'\r\nconst Time = (props) => {\r\n    return(\r\n        <div>\r\n            <Container>\r\n                <div className = {classes.timeDisplay}>\r\n                    {props.day}\r\n                </div>\r\n                <div className = {classes.timeDisplay}>\r\n                    {props.date}\r\n                </div>\r\n                <div className = {classes.timeDisplay}> \r\n                    {props.time}\r\n                </div>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Time;","import React, {Component} from 'react'\r\nimport Time from '../../components/Time/Time'\r\nimport Container from 'react-bootstrap/Container'\r\nimport {connect} from 'react-redux'\r\nclass TimeOptions extends Component{\r\n    constructor(){\r\n        super();\r\n        const [month, date, year]    = new Date().toLocaleDateString().split(\"/\");\r\n        const [hour, minute, second] = new Date().toLocaleTimeString().split(/:| /);\r\n        const d = new Date().getDay();\r\n        const totalhour = new Date().getHours();\r\n        const day = this.dayHandler(d);\r\n        let AMorPM = \"AM\"\r\n        if (totalhour >= 12){\r\n            AMorPM = \"PM\"\r\n        }\r\n        else{\r\n            AMorPM = \"AM\"\r\n        }\r\n        this.state = {\r\n            Date: date,\r\n            Month: month,\r\n            Year: year,\r\n            Hour:  hour,\r\n            TotalHour: totalhour,\r\n            Minute: minute,\r\n            Second: second,\r\n            Day: day,\r\n            AMPM: AMorPM\r\n        };\r\n\r\n    }\r\n\r\n    dayHandler(dayNum){\r\n        switch (dayNum){\r\n            case 0: \r\n                return \"Sunday\"\r\n            case 1: \r\n                return \"Monday\"\r\n            case 2: \r\n                return \"Tuesday\"\r\n            case 3: \r\n                return \"Wednesday\"\r\n            case 4: \r\n                return \"Thursday\"\r\n            case 5: \r\n                return \"Friday\"\r\n            case 6: \r\n                return \"Saturday\"\r\n            default:\r\n                return \"Error\"\r\n        }\r\n\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.interval = setInterval(() => this.updateClock(), 1000);\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    updateClock = () => {\r\n        const [month, date, year]    = new Date().toLocaleDateString().split(\"/\");\r\n        const [hour, minute, second] = new Date().toLocaleTimeString().split(/:| /);\r\n        const d = new Date().getDay();\r\n        const totalhour = new Date().getHours();\r\n        const day = this.dayHandler(d);\r\n        let AMorPM = \"AM\"\r\n        if (totalhour >= 12){\r\n            AMorPM = \"PM\"\r\n        }\r\n        else{\r\n            AMorPM = \"AM\"\r\n        }\r\n        this.setState({ Date: date, Month: month, Year: year, Hour: hour, TotalHour: totalhour, Minute: minute, Second: second, Day: day, AMPM: AMorPM})\r\n    }\r\n    render(){\r\n\r\n        let fullTime = null;\r\n        if(this.props.timeType === \"Regular\"){\r\n            fullTime = this.state.Hour + \":\" + this.state.Minute + \":\" + this.state.Second + this.state.AMPM;\r\n        }\r\n        else if(this.props.timeType === \"Military\"){\r\n            fullTime = this.state.TotalHour + \":\" + this.state.Minute + \":\" + this.state.Second;\r\n        }\r\n\r\n        let fullDate = null;\r\n        switch (this.props.dateType){\r\n            case \"MDY\":\r\n                fullDate = \r\n                <Time \r\n                date = {this.state.Month + \"/\" + this.state.Date + \"/\" + this.state.Year} \r\n                time = {fullTime} \r\n                day = {this.state.Day}>\r\n                </Time>\r\n                break;\r\n\r\n            case \"DMY\":\r\n                fullDate = \r\n                <Time \r\n                date = {this.state.Date + \"/\" + this.state.Month + \"/\" + this.state.Year} \r\n                time = {fullTime}  \r\n                day = {this.state.Day}>\r\n                </Time>\r\n                break;\r\n\r\n            case \"YMD\":\r\n                fullDate = \r\n                <Time \r\n                date = {this.state.Year + \"/\" + this.state.Month + \"/\" + this.state.Date} \r\n                time = {fullTime} \r\n                day = {this.state.Day}>\r\n                </Time>\r\n                break;\r\n            default: \r\n        }\r\n        \r\n        return(\r\n            <Container style = {{textAlign: \"center\"}}>\r\n                    {fullDate}\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        timeType: state.timeSettings,\r\n        dateType: state.dateSettings\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TimeOptions)","\r\nimport React, {Component} from 'react'\r\nimport {Switch, Route, HashRouter} from 'react-router-dom'\r\nimport Home from '../containers/Home/Home'\r\nimport History from '../containers/History/History'\r\nimport About from '../containers/About/About'\r\nimport Settings from '../containers/Settings/Settings'\r\nimport Header from '../containers/Header/Header'\r\nimport CurrentTime from '../containers/CurrentTime/CurrentTime'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nclass App extends Component{\r\n    componentDidMount = () => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            \r\n            this.props.logOut();\r\n        }\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            const userId = localStorage.getItem('userId');\r\n            if(expirationDate <= new Date()){\r\n                this.props.logOut();\r\n            }\r\n            else{\r\n                const queryParams = \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n                axios.get('https://sleep-scheduler-4c01c-default-rtdb.firebaseio.com/data.json' + queryParams)\r\n                .then(res => {\r\n                    this.props.autoLogin(res, token)\r\n                    setTimeout(() => {\r\n                        this.props.logOut();\r\n                    }, ((expirationDate.getTime() - new Date().getTime())/1000) * 1000);\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path = \"\" component = {Header}/>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <CurrentTime></CurrentTime>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Route path = \"/scheduler/\" exact component = {Home}/>\r\n                    <Route path = \"/history\" component = {History}/>\r\n                    <Route path = \"/about\" component = {About}/>\r\n                    <Route path = \"/settings\" component = {Settings}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        autoLogin: (response, newToken) => dispatch({type: \"AUTH_LOGIN\", response: response, token: newToken}),\r\n        logOut: () => dispatch({type: \"LOGOUT\"})\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { std} from 'mathjs'\r\nimport axios from 'axios'\r\nconst initialState = {\r\n    sleepScore: \"N/A\",\r\n    timeSettings: \"Regular\",\r\n    dateSettings: \"MDY\",\r\n    Times: [\r\n        {\r\n            id: \"-1\",\r\n            sleepTime: \"N/A\",\r\n            wakeTime: \"N/A\",\r\n            totalHours: \"N/A\"\r\n        },\r\n        {\r\n            id: \"-1\",\r\n            sleepTime: \"N/A\",\r\n            wakeTime: \"N/A\",\r\n            totalHours: \"N/A\"\r\n        },\r\n        {\r\n            id: \"-1\",\r\n            sleepTime: \"N/A\",\r\n            wakeTime: \"N/A\",\r\n            totalHours: \"N/A\"\r\n        },\r\n        {\r\n            id: \"-1\",\r\n            sleepTime: \"N/A\",\r\n            wakeTime: \"N/A\",\r\n            totalHours: \"N/A\"\r\n        },\r\n        {\r\n            id: \"-1\",\r\n            sleepTime: \"N/A\",\r\n            wakeTime: \"N/A\",\r\n            totalHours: \"N/A\"\r\n        },\r\n        {\r\n            id: \"-1\",\r\n            sleepTime: \"N/A\",\r\n            wakeTime: \"N/A\",\r\n            totalHours: \"N/A\"\r\n        },\r\n        {\r\n            id: \"-1\",\r\n            sleepTime: \"N/A\",\r\n            wakeTime: \"N/A\",\r\n            totalHours: \"N/A\"\r\n        }\r\n    ]\r\n    /*sleepTime is an array filled with objects\r\n    each object has an id key (which is given as the time which the data was entered)\r\n    a sleeptime, and a wakeup time. The Times array only stores up to a week worths of data and slots in\r\n    the latest date into the 0 index (and the last date in the 7th index assuming the array is full).\r\n    */\r\n   ,\r\n   token: null,\r\n   userId: null,\r\n   error: null,\r\n   dataId: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\nconst leadingZeroHandler = (time) => {\r\n    if(time < 10){\r\n        time = \"000\" + time.toString()\r\n    }\r\n    else if(time < 100){\r\n        time = \"00\" + time.toString()\r\n    }\r\n    else if(time < 1000){\r\n        time = \"0\" + time.toString()\r\n    }\r\n    else{\r\n        time = time.toString()\r\n    }\r\n    return time\r\n}\r\n\r\nconst splittingTime = (time) => {\r\n    return time.slice(0,2) + time.slice(3,5)\r\n}\r\n\r\nconst militaryToRegularHandler = (time) => {\r\n    let tempTimeValue = splittingTime(time)\r\n    let AMorPM = \"AM\"\r\n\r\n    tempTimeValue = parseInt(tempTimeValue)\r\n\r\n    if(tempTimeValue >= 1200 && tempTimeValue <= 1259){\r\n        AMorPM = \"PM\"\r\n    }\r\n    else if (tempTimeValue > 1259 && tempTimeValue < 2400){\r\n        AMorPM = \"PM\"\r\n        tempTimeValue -= 1200\r\n    }\r\n    else if (tempTimeValue >= 0 && tempTimeValue < 100){\r\n        tempTimeValue += 1200\r\n    }\r\n    \r\n    tempTimeValue = leadingZeroHandler(tempTimeValue)\r\n\r\n    return (tempTimeValue.slice(0,2) + \":\" + tempTimeValue.slice(2,4) + AMorPM)\r\n}\r\n\r\nconst regularToMilitaryHandler = (time) => {\r\n    let tempTimeValue = splittingTime(time)\r\n    let AMorPM = time.slice(5,7);\r\n\r\n    tempTimeValue = parseInt(tempTimeValue)\r\n\r\n    if((AMorPM === \"PM\" && tempTimeValue < 1200)){\r\n        tempTimeValue += 1200\r\n    }\r\n    else if ((AMorPM === \"AM\" && tempTimeValue >= 1200)){\r\n        tempTimeValue -= 1200\r\n    }\r\n    tempTimeValue = leadingZeroHandler(tempTimeValue)\r\n    \r\n    return tempTimeValue.slice(0,2) + \":\" + tempTimeValue.slice(2,4)\r\n}\r\n\r\n\r\nconst timeToNumberHelper = time => {\r\n    let retTime = null\r\n    if(state.timeSettings === \"Regular\"){\r\n        retTime = regularToMilitaryHandler(time)\r\n        retTime = splittingTime(retTime)\r\n        retTime = parseInt(retTime)\r\n    }\r\n    else{\r\n        retTime = time\r\n        retTime = splittingTime(retTime)\r\n        retTime = parseInt(retTime)\r\n    }\r\n    return retTime;\r\n}\r\n\r\nconst stdScorer = std => {\r\n    if(std < 1){\r\n        return 20\r\n    }\r\n    else if (std < 2){\r\n        return 10\r\n    }\r\n    else if (std < 3){\r\n        return 5\r\n    }\r\n    else{\r\n        return 0\r\n    }\r\n}\r\n\r\nconst average = scores => {\r\n    if(scores.length > 0){\r\n        \r\n        let totalScore = 0 \r\n        for(let i = 0; i < scores.length; i++){\r\n            totalScore += scores[i];\r\n        }\r\n        return totalScore/scores.length\r\n    }\r\n\r\n    else{\r\n        return 0\r\n    }\r\n}\r\n\r\nconst totalHoursHelper = (sleepTime, wakeTime) => {\r\n    let totalSleepHours = (sleepTime - wakeTime)/100;\r\n        \r\n        if(sleepTime >= wakeTime){\r\n            totalSleepHours = 24 - totalSleepHours\r\n        }\r\n        else{\r\n            totalSleepHours = totalSleepHours * -1\r\n        }\r\n\r\n        return totalSleepHours\r\n}\r\n\r\nconst sleepHoursTotalAvg = newTimes => {\r\n    let tempNewTimes = [...newTimes]\r\n    let scores = []\r\n    for (let i = 0; i <= 6; i++){\r\n        if(tempNewTimes[i].id === \"-1\"){\r\n            break\r\n        }\r\n        let tempSleepTimeValue = timeToNumberHelper(tempNewTimes[i].sleepTime)\r\n        let tempWakeTimeValue = timeToNumberHelper(tempNewTimes[i].wakeTime)\r\n\r\n        let totalSleepHours = totalHoursHelper(tempSleepTimeValue, tempWakeTimeValue)\r\n        if(totalSleepHours >= 7 && totalSleepHours <= 9){\r\n            scores.push(40)\r\n        }\r\n        else if ((totalSleepHours >= 5 && totalSleepHours < 7) || (totalSleepHours > 9 && totalSleepHours <= 11) ){\r\n            scores.push(20)\r\n        }\r\n        else if ((totalSleepHours >= 3 && totalSleepHours < 5) || (totalSleepHours > 11 && totalSleepHours <= 13) ){\r\n            scores.push(0)\r\n        }\r\n        else {\r\n            scores.push(-40)\r\n        }\r\n\r\n    }\r\n    \r\n    return average(scores)\r\n\r\n}\r\n\r\nconst sleepHoursConsistentAvg = newTimes => {\r\n    let tempNewTimes = [...newTimes]\r\n    let scores = []\r\n    let sleepTimes = []\r\n    let wakeTimes = []\r\n    for (let i = 0; i <= 6; i++){\r\n        if(tempNewTimes[i].id === \"-1\"){\r\n            break\r\n        }\r\n        let tempSleepTimeValue = timeToNumberHelper(tempNewTimes[i].sleepTime)\r\n        let tempWakeTimeValue = timeToNumberHelper(tempNewTimes[i].wakeTime)\r\n\r\n        sleepTimes.push(tempSleepTimeValue/100)\r\n        wakeTimes.push(tempWakeTimeValue/100)\r\n        scores.push(stdScorer(std(sleepTimes)) + stdScorer(std(wakeTimes)))\r\n    }\r\n    return average(scores)\r\n\r\n}\r\nconst sleepTimeAvg = newTimes => {\r\n    let tempNewTimes = [...newTimes]\r\n    let scores = []\r\n    let sleepHours = []\r\n    for (let i = 0; i <= 6; i++){\r\n        if(tempNewTimes[i].id === \"-1\"){\r\n            break\r\n        }\r\n        let tempSleepTimeValue = timeToNumberHelper(tempNewTimes[i].sleepTime)\r\n        let tempWakeTimeValue = timeToNumberHelper(tempNewTimes[i].wakeTime)\r\n\r\n        let totalSleepHours = totalHoursHelper(tempSleepTimeValue, tempWakeTimeValue)\r\n\r\n        sleepHours.push(totalSleepHours)\r\n        scores.push(stdScorer(std(sleepHours)))\r\n    }\r\n\r\n    return average(scores)\r\n\r\n}\r\n\r\nconst synchState = (newState) => {\r\n    axios.put('https://sleep-scheduler-4c01c-default-rtdb.firebaseio.com/data/' + state.dataId + '.json?auth=' + state.token, newState)\r\n}\r\n\r\nswitch(action.type){\r\n    case \"ADD\":\r\n        const newTimes = [...state.Times];\r\n\r\n        for (let i = 6; i >= 0; i--){\r\n            if(i === 0){\r\n                let sleepTime = action.value.sleepTime;\r\n                let wakeTime = action.value.wakeTime;\r\n                const id = action.id\r\n\r\n                if(state.timeSettings === \"Regular\"){\r\n                    const sleepAMorPM = action.value.button1;\r\n                    const wakeAMorPM = action.value.button2;\r\n                    sleepTime = sleepTime + sleepAMorPM;\r\n                    wakeTime = wakeTime + wakeAMorPM;\r\n                }\r\n                const totalHoursValue = totalHoursHelper(timeToNumberHelper(sleepTime), timeToNumberHelper(wakeTime)).toString()\r\n                \r\n                newTimes[0] = {id: id, sleepTime: sleepTime, wakeTime: wakeTime, totalHours: totalHoursValue}\r\n                \r\n            }\r\n            else{\r\n                newTimes[i] = {...newTimes[i-1]}\r\n            }\r\n        }\r\n\r\n        \r\n        // console.log(sleepHoursTotalAvg(newTimes), sleepHoursConsistentAvg(newTimes), sleepTimeAvg(newTimes))\r\n        if(state.token){\r\n            const newState = {\r\n                ...state,\r\n                sleepScore: (sleepHoursTotalAvg(newTimes) + sleepHoursConsistentAvg(newTimes) + sleepTimeAvg(newTimes)).toFixed(2).toString(),\r\n                Times: newTimes\r\n            }\r\n            synchState(newState)\r\n        }\r\n        return {\r\n            ...state,\r\n            sleepScore: (sleepHoursTotalAvg(newTimes) + sleepHoursConsistentAvg(newTimes) + sleepTimeAvg(newTimes)).toFixed(2).toString(),\r\n            Times: newTimes\r\n        }\r\n    \r\n    case \"CHANGE_SETTINGS\":\r\n        if(action.timeOrDate === \"Date\"){\r\n            if(state.token){\r\n                const newState = {\r\n                    ...state,\r\n                    dateSettings: action.value\r\n                }\r\n                synchState(newState)\r\n            }\r\n            return {\r\n                ...state,\r\n                dateSettings: action.value\r\n            }\r\n        }\r\n        \r\n        if(action.timeOrDate === \"Time\"){\r\n\r\n            const newTimes = [...state.Times];\r\n\r\n            for (let i = 0; i <= 6; i++){\r\n                if(action.value === \"Regular\"){\r\n                    if(newTimes[i].id !== \"-1\"){\r\n                        newTimes[i] = {\r\n                            ...newTimes[i], \r\n                            sleepTime: militaryToRegularHandler(newTimes[i].sleepTime), \r\n                            wakeTime: militaryToRegularHandler(newTimes[i].wakeTime)}\r\n                    }\r\n                    else{\r\n                        break;\r\n                    }\r\n                }\r\n                else if(action.value === \"Military\"){\r\n                    if(newTimes[i].id !== \"-1\"){\r\n                        newTimes[i] = {\r\n                            ...newTimes[i], \r\n                            sleepTime: regularToMilitaryHandler(newTimes[i].sleepTime), \r\n                            wakeTime: regularToMilitaryHandler(newTimes[i].wakeTime)}\r\n                    }\r\n                    else{\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(state.token){\r\n                const newState = {\r\n                    ...state,\r\n                    Times: newTimes,\r\n                    timeSettings: action.value\r\n                }\r\n                synchState(newState)\r\n            }\r\n            return {\r\n                ...state,\r\n                Times: newTimes,\r\n                timeSettings: action.value\r\n            }\r\n        }\r\n    \r\n    // eslint-disable-next-line\r\n    case \"AUTH_FAIL\":\r\n        return {\r\n            ...state,\r\n            error: action.error.response.data.error\r\n        }\r\n\r\n    case \"AUTH_SIGNUP\":\r\n        const newState = {\r\n            ...action.response\r\n        }\r\n        return newState\r\n    \r\n    case \"AUTH_LOGIN\":\r\n\r\n        return{\r\n            ...action.response.data[Object.keys(action.response.data)[0]],\r\n            token: action.token\r\n        }\r\n         \r\n\r\n    case \"LOGOUT\":\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('expirationDate')\r\n        localStorage.removeItem('userId')\r\n        return {\r\n            ...initialState\r\n        }\r\n    default:\r\n        return state\r\n}\r\n\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport reducer from './store/reducer'\r\n\r\n\r\nconst store = createStore(\r\n  reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nReactDOM.render(\r\n      <Provider store = {store}>\r\n        <App />\r\n      </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Header_navLink__3GDp4\",\"navImage\":\"Header_navImage__1rd0-\",\"signIn\":\"Header_signIn__29vDH\",\"Header\":\"Header_Header__349HV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Login_Modal__3sSm6\",\"Button\":\"Login_Button__2JWu2\",\"Link\":\"Login_Link__GfsDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeDisplay\":\"Time_timeDisplay__1nI2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreImg\":\"Score_scoreImg__2s5Mb\",\"scoreText\":\"Score_scoreText__R8klX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdownOption\":\"Settings_dropdownOption__1xNi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Inputs_Button__1Eaic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3B6mI\"};"],"sourceRoot":""}